name: CI/CD with GitHub Actions | Â© 2023 by minhchan


on:
  push:
  pull_request:
    branches: [ main ]

jobs: 

  build:

    runs-on: ubuntu-latest


    steps:

      - name: Check-out repository 
        uses: actions/checkout@v3

      - name: Set up JDK 20 
        uses: actions/setup-java@v3 
        with:
          java-version: '20' 
          distribution: 'adopt'
          cache: maven
     
      - name: Build project with Maven
        run: mvn -B package --file Backend/ShoesCustom/ShoesPee/ShoesPee/pom.xml

- name: Cache
  uses: actions/cache@v3.3.2
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
    enableCrossOsArchive: # optional, default is false
    # Fail the workflow if cache entry is not found
    fail-on-cache-miss: # optional, default is false
    # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
    lookup-only: # optional, default is false
      
      # - name: Distribute jar-war file 
      #   run: mkdir staging && cp target/*.jar staging     
     
      # - name: Make hyperlink to jar-war file 
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: 0.0.1-SNAPSHOT.jar  
      #     path: staging
      
      # - name: Build & push Docker image
      #   uses: mr-smithers-excellent/docker-build-push@v5
      #   with:
      #     image: minhchan/minhchan-shoepee
      #     tags: latest
      #     registry: registry-1.docker.io
      #     dockerfile: Dockerfile
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}


  
